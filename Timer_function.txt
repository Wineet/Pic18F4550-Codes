#define _XTAL_FREQ 8000000


void timer_int()
{
          //** Input Frequency divide by 4  **//
    T0CONbits.TMR0ON=0; //timer off
    T0CONbits.T08BIT=0; // 16 bit
    T0CONbits.T0CS=0;   // Instruction  CLOCK cycle TIMER MODE
    T0CONbits.T0SE=0;   //INCREMENT on low to high transition
    T0CONbits.PSA=0;   // Prescalar assigned
    T0CONbits.T0PS=0b000;    // dived by 2 prescalar
    INTCONbits.TMR0IF=0;    //over flow flag clear
    TMR0L=0X00;
    TMR0H=0X00;
}
void timer_clear()
{
    TMR0L=0X00;
    TMR0H=0X00;
}
void load_timer(unsigned int low, unsigned int high)
{
    TMR0L=low;
    TMR0H=high;
}
void start_timer()
{
    T0CONbits.TMR0ON=1;
}
unsigned int stop_timer()
{

 T0CONbits.TMR0ON=0;
}

void timer_on()
{
 T0CONbits.TMR0ON=1;
}

void timer_off()
{
 T0CONbits.TMR0ON=0;
}

int timer_Overflow_flag()
{
if(INTCONbits.T0IF==1)
    return 1;
else
    return 0;
}